{"version":3,"sources":["Components/Search.js","Components/ArtistList.js","Components/Artists.js","Components/PhotosButton.js","Components/AlbumImages.js","Components/Credentials.js","Components/Profile.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","textField","color","Search","artistData","setArtistData","classes","allArtist","className","noValidate","autoComplete","TextField","id","label","type","onChange","e","target","value","searchedArtists","filter","artist","name","includes","console","log","backgroundColor","border","media","height","ArtistList","selectedArtist","setSelectedArtist","setArtistId","artistId","map","index","Card","variant","CardActionArea","CardMedia","image","images","url","title","CardContent","Typography","gutterBottom","component","genres","genre","CardActions","Button","size","onClick","maxWidth","Artists","button","marginTop","alignSelf","Buttons","openLightbox","useLightbox","AlbumImages","useState","artistAlbums","setArtistAlbums","spotify","ClientId","process","ClientSecret","useEffect","axios","headers","btoa","data","method","then","tokenResponse","access_token","items","options","buttons","showDownloadButton","showAutoplayButton","showThumbnailsButton","ImageList","rowHeight","imageList","cols","gap","album","i","ImageListItem","src","alt","ImageListItemBar","subtitle","release_date","display","flexDirection","flexWrap","justifyContent","overflow","palette","background","paper","ArtistProfile","topTracks","setTopTracks","tracks","slice","position","undefined","followers","total","track","App","setToken","artists","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f2febcc.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n  textField: {\n    color: '#fff'\n  }\n}));\n\nexport default function Search({artistData, setArtistData}) {\n  const classes = useStyles();\n  const allArtist = [...artistData];\n\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <TextField id=\"standard-basic\" label=\"Search Artist\" className={classes.textField}\n        type=\"search\" onChange={(e) => {\n          if(e.target.value){\n            const searchedArtists = allArtist.filter(artist => {\n            if(artist.name.includes(e.target.value)){\n              return artist\n            }\n          })\n        setArtistData(searchedArtists) \n        }\n        else{\n          setArtistData(allArtist)\n        }\n        console.log(allArtist)\n      }}/>\n    </form>\n  );\n}\n","import React from 'react';\nimport '../App.css';\nimport Search from './Search'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 345,\n    backgroundColor: '#424242',\n    color: '#fff',\n    border: '1px solid rgba(0, 0, 0, 0.23)'\n  },\n  media: {\n    height: 140,\n  },\n});\n\n\n\nconst ArtistList = ({selectedArtist, setSelectedArtist, artistId, setArtistId, artistData}) => {\n  const classes = useStyles();\n\n  return (\n      <div className='artist-list'>\n        {\n         \n            artistData.map((artist, index) => (\n\n              <Card className={classes.root} key={index} variant=\"outlined\">\n                  <CardActionArea>\n                      <CardMedia\n                      className={classes.media}\n                      image={artist.images[0].url}\n                      title=\"Contemplative Reptile\"\n                      />\n                      <CardContent>\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                          {artist.name}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"inherit\" component=\"p\">\n                          {artist.genres.map((genre) => genre + ', ')}\n                      </Typography>\n                      </CardContent>\n                  </CardActionArea>\n                  <CardActions>\n                      <Button size=\"small\" color=\"inherit\" variant=\"outlined\" onClick={() => {\n                          setArtistId(artist.id)\n                          setSelectedArtist(artist)\n                      }}> \n                      Profile\n                      </Button>\n                  </CardActions>\n          </Card>\n          )) \n          }\n    </div>\n  );\n}\n\nexport default ArtistList;\n","import React from 'react';\nimport '../App.css';\nimport Search from './Search'\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArtistList from './ArtistList';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  }\n});\n\n\n\nconst Artists = ({selectedArtist, setSelectedArtist, artistId, setArtistId, artistData, setArtistData}) => {\n  const classes = useStyles();\n\n  console.log(artistData)\n\n  return (\n      <div>\n        <div className=\"flex\">\n            <h1>Artists</h1>\n            <Search artistData={artistData} setArtistData={setArtistData}/>\n        </div>\n          <ArtistList selectedArtist={selectedArtist} setSelectedArtist={setSelectedArtist} artistId={artistId} setArtistId={setArtistId} artistData={artistData} />\n    </div>\n  );\n}\n\nexport default Artists;\n","import { useLightbox } from \"simple-react-lightbox\";\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n      marginTop: 30,\n      width: 200,\n      alignSelf: 'flex-end'\n    },\n\n  }));\nexport default function Buttons() {\n  const { openLightbox } = useLightbox();\n  const classes = useStyles();\n\n  return (\n    <>\n      <Button onClick={() => openLightbox()} className={classes.button} \n        variant=\"outlined\" color=\"inherit\" size=\"medium\">\n          View All Albums\n      </Button>\n    </>\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport '../App.css';\nimport { Credentials } from './Credentials';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ImageList from '@material-ui/core/ImageList';\nimport ImageListItem from '@material-ui/core/ImageListItem';\nimport ImageListItemBar from '@material-ui/core/ImageListItemBar';\nimport SimpleReactLightbox from 'simple-react-lightbox';\nimport { SRLWrapper } from \"simple-react-lightbox\";\nimport PhotosButton from './PhotosButton';\n\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n});\n\n\n\nconst AlbumImages = ({artistId }) => {\n  const classes = useStyles();\n  const [artistAlbums, setArtistAlbums] = useState([]);\n  const spotify = Credentials();  \n  const options = {\n    buttons:{\n      showDownloadButton: false,\n      showAutoplayButton: false,\n      showThumbnailsButton: false\n    }\n  }\n\n  useEffect(() => {\n    axios('https://accounts.spotify.com/api/token', {\n      headers: {\n        'Content-Type' : 'application/x-www-form-urlencoded',\n        'Authorization' : 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)      \n      },\n      data: 'grant_type=client_credentials',\n      method: 'POST'\n    })\n    .then(tokenResponse => {      \n      axios(`https://api.spotify.com/v1/artists/${artistId}/albums?include_groups=album&limit=9`, {\n        method: 'GET',\n        headers: { 'Authorization' : 'Bearer ' + tokenResponse.data.access_token}\n      }).then(data => {\n        setArtistAlbums(data.data.items)\n      })\n    });\n\n  },[spotify.ClientId, spotify.ClientSecret]); \n\n  return (\n    <SimpleReactLightbox>\n    <div className=\"flex-album\">\n      <h4 className=\"h4-album\">Albums</h4>\n      <PhotosButton />\n    </div>\n    <SRLWrapper options={options}>\n      <ImageList rowHeight={200} className={classes.imageList} cols={3} gap={8}>\n      {artistAlbums.map((album, i) => (\n        <ImageListItem key={i}>\n          <img src={album.images[0].url} alt={album.name} />\n          <ImageListItemBar\n            title={album.name}\n            subtitle={<span>Release Date: {album.release_date}</span>}\n          />\n        </ImageListItem>\n      ))}\n    </ImageList>\n    </SRLWrapper>\n  </SimpleReactLightbox>\n  );\n}\n\nexport default AlbumImages;\n","const Credentials = () => {\n    \n    return {\n        ClientId: process.env.REACT_APP_CLIENT_ID,\n        ClientSecret: process.env.REACT_APP_CLIENT_SECRET\n    }\n    \n}\n\nexport { Credentials };","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport '../App.css'\nimport { Credentials } from './Credentials';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport AlbumImages from './AlbumImages';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper,\n      margin: 'auto',\n      width: '80vw'\n    },\n    button: {\n      marginTop: 30,\n      width: 100\n    }\n  }));\n\nexport default function ArtistProfile({artistId, selectedArtist, setArtistId}) {\n  const classes = useStyles();\n  const spotify = Credentials();  \n  const [topTracks, setTopTracks] = useState([]);  \n\n  useEffect(() => {\n    axios('https://accounts.spotify.com/api/token', {\n      headers: {\n        'Content-Type' : 'application/x-www-form-urlencoded',\n        'Authorization' : 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)      \n      },\n      data: 'grant_type=client_credentials',\n      method: 'POST'\n    })\n    .then(tokenResponse => {      \n      axios(`https://api.spotify.com/v1/artists/${artistId}/top-tracks?market=ES`, {\n        method: 'GET',\n        headers: { 'Authorization' : 'Bearer ' + tokenResponse.data.access_token}\n      }).then(data => {\n        setTopTracks(data.data.tracks.slice(0,5))\n      })\n    });\n\n  },[spotify.ClientId, spotify.ClientSecret]);\n\n  return (\n    <div className={classes.root}>\n        <div className=\"artist-header\">   \n        <div>\n          <Button className={classes.button} variant=\"outlined\" \n                color=\"inherit\" size=\"medium\"\n                position=\"right\"\n                onClick={() => {setArtistId(undefined)}}> \n                Back\n            </Button>\n          <h1>{selectedArtist.name}</h1>\n          <h4>Followers: {selectedArtist.followers.total}</h4>\n          <img src={selectedArtist.images[0].url} alt={selectedArtist.name} className=\"artist-img\"/>\n        </div>\n          <div className=\"top-tracks\">\n            <h4>Top Tracks</h4>\n            <ol>\n              {topTracks.map((track, i) => (\n                <li key={i} className=\"track\">{track.name}</li>\n              ))}\n            </ol>\n        </div>\n        </div>\n        <div className=\"about-artist\">\n          <div className=\"album-photos\">\n          <AlbumImages artistId={artistId}/>\n          </div>\n        </div>\n    </div>\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Artists from './Components/Artists';\nimport Profile from './Components/Profile'\nimport { Credentials } from './Components/Credentials';\nimport Search from './Components/Search';\n\nfunction App() {\n\n  const spotify = Credentials();  \n  const [artistId, setArtistId] = useState();\n  const [selectedArtist, setSelectedArtist] = useState();\n  const [artistData, setArtistData] = useState([]);\n  const [token, setToken] = useState('');  \n  useEffect(() => {\n    axios('https://accounts.spotify.com/api/token', {\n      headers: {\n        'Content-Type' : 'application/x-www-form-urlencoded',\n        'Authorization' : 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)      \n      },\n      data: 'grant_type=client_credentials',\n      method: 'POST'\n    }).then(tokenResponse => {      \n      setToken(tokenResponse.data.access_token);\n      axios('https://api.spotify.com/v1/artists?ids=4XquDVA8pkg5Lx91No1JxB%2C75dQReiBOHN37fQgWQrIAJ%2C4mLJ3XfOM5FPjSAWdQ2Jk7%2C6gK1Uct5FEdaUWRWpU4Cl2%2C1fZpYWNWdL5Z3wrDtISFUH%2C69tiO1fG8VWduDl3ji2qhI%2C4C50EbCS11M0VbGyH3OfLt%2C1xLMexpeeTKQ20SwGMaGSK%2C24V5UY0nChKpnb1TBPJhCw%2C3pTE9iaJTkWns3mxpNQlJV%2C44insiIQApkRaCMIbuaISJ%2C4ETSs924pXMzjIeD6E9b4u', {\n        method: 'GET',\n        headers: { 'Authorization' : 'Bearer ' + tokenResponse.data.access_token}\n      }).then(data => {\n        setArtistData(data.data.artists)\n      })\n    });\n\n  }, [spotify.ClientId, spotify.ClientSecret]); \n\n  return artistId ? <Profile selectedArtist={selectedArtist} artistId={artistId} setArtistId={setArtistId}/> : <Artists selectedArtist={selectedArtist} \n    setSelectedArtist={setSelectedArtist} \n    artistId={artistId} setArtistId={setArtistId} \n    artistData={artistData} setArtistData={setArtistData} />;\n}\n\nexport default App;\n\n\n// Brittany Howard - 4XquDVA8pkg5Lx91No1JxB\n// Local Natives - 75dQReiBOHN37fQgWQrIAJ\n// Dr. Dog - 4mLJ3XfOM5FPjSAWdQ2Jk7\n// Petite Bisquit - 6gK1Uct5FEdaUWRWpU4Cl2\n// Shakey Graves - 1fZpYWNWdL5Z3wrDtISFUH\n// Mt. Joy - 69tiO1fG8VWduDl3ji2qhI\n// Wild Child - 1xLMexpeeTKQ20SwGMaGSK\n// Jai Wolf - 24V5UY0nChKpnb1TBPJhCw\n// Bombay Bicycle - 3pTE9iaJTkWns3mxpNQlJV\n// Joey P - 44insiIQApkRaCMIbuaISJ\n// 4XquDVA8pkg5Lx91No1JxB,75dQReiBOHN37fQgWQrIAJ,4mLJ3XfOM5FPjSAWdQ2Jk7,6gK1Uct5FEdaUWRWpU4Cl2,1fZpYWNWdL5Z3wrDtISFUH,69tiO1fG8VWduDl3ji2qhI,1xLMexpeeTKQ20SwGMaGSK,1xLMexpeeTKQ20SwGMaGSK,24V5UY0nChKpnb1TBPJhCw,3pTE9iaJTkWns3mxpNQlJV,44insiIQApkRaCMIbuaISJ,4ETSs924pXMzjIeD6E9b4u\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}